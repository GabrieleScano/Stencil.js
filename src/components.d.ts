/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AnalogClock {}
  interface ClockFace {
    'hour': number;
    'minute': number;
    'second': number;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface TimeZoneSlider {
    'offset': number;
  }
}

declare global {

  // Adding a global JSX for backcompatibility with legacy dependencies
  export namespace JSX {
    export interface Element {}
  }


  interface HTMLAnalogClockElement extends Components.AnalogClock, HTMLStencilElement {}
  var HTMLAnalogClockElement: {
    prototype: HTMLAnalogClockElement;
    new (): HTMLAnalogClockElement;
  };

  interface HTMLClockFaceElement extends Components.ClockFace, HTMLStencilElement {}
  var HTMLClockFaceElement: {
    prototype: HTMLClockFaceElement;
    new (): HTMLClockFaceElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLTimeZoneSliderElement extends Components.TimeZoneSlider, HTMLStencilElement {}
  var HTMLTimeZoneSliderElement: {
    prototype: HTMLTimeZoneSliderElement;
    new (): HTMLTimeZoneSliderElement;
  };
  interface HTMLElementTagNameMap {
    'analog-clock': HTMLAnalogClockElement;
    'clock-face': HTMLClockFaceElement;
    'my-component': HTMLMyComponentElement;
    'time-zone-slider': HTMLTimeZoneSliderElement;
  }
}

declare namespace LocalJSX {
  interface AnalogClock extends JSXBase.HTMLAttributes<HTMLAnalogClockElement> {}
  interface ClockFace extends JSXBase.HTMLAttributes<HTMLClockFaceElement> {
    'hour'?: number;
    'minute'?: number;
    'second'?: number;
  }
  interface MyComponent extends JSXBase.HTMLAttributes<HTMLMyComponentElement> {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface TimeZoneSlider extends JSXBase.HTMLAttributes<HTMLTimeZoneSliderElement> {
    'offset'?: number;
    'onTimeZoneChanged'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'analog-clock': AnalogClock;
    'clock-face': ClockFace;
    'my-component': MyComponent;
    'time-zone-slider': TimeZoneSlider;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


